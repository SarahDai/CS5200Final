{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/monkey/Documents/cs6620_db/project/PM6/safe_travel/src/components/AirbnbListings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Listing from './Listing';\nlet headers = new Headers();\nheaders.append('Content-Type', 'application/json');\nheaders.append('Origin', 'http://localhost:3000');\n\nconst filterNeighborhood = (listings, neighborhood) => {\n  return data.filter(data['Neighborhood']);\n};\n\nconst AirbnbListings = () => {\n  _s();\n\n  const [listing, setListing] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/listings', {\n      mode: 'cors',\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setListing(data);\n    }).catch(error => {\n      console.error('Error fetching listings' + error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SafeTravel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: listing.map((list, index) => /*#__PURE__*/_jsxDEV(Listing, {\n        info: list\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AirbnbListings, \"iLXPd4CtWGQHAJ8gd7qgrx2K/x0=\");\n\n_c = AirbnbListings;\nexport default AirbnbListings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AirbnbListings\");","map":{"version":3,"sources":["/Users/monkey/Documents/cs6620_db/project/PM6/safe_travel/src/components/AirbnbListings.js"],"names":["React","useEffect","useState","Listing","headers","Headers","append","filterNeighborhood","listings","neighborhood","data","filter","AirbnbListings","listing","setListing","fetch","mode","method","then","response","json","console","log","catch","error","map","list","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AAEAD,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACAF,OAAO,CAACE,MAAR,CAAe,QAAf,EAAwB,uBAAxB;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,YAAX,KAA4B;AACnD,SAAOC,IAAI,CAACC,MAAL,CAAYD,IAAI,CAAC,cAAD,CAAhB,CAAP;AACH,CAFD;;AAIA,MAAME,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAC,gCAAD,EAAkC;AACnCC,MAAAA,IAAI,EAAE,MAD6B;AAEnCC,MAAAA,MAAM,EAAE,KAF2B;AAGnCb,MAAAA,OAAO,EAAEA;AAH0B,KAAlC,CAAL,CAKKc,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUR,IAAI,IAAI;AACVW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAI,MAAAA,UAAU,CAACJ,IAAD,CAAV;AACH,KATL,EAUKa,KAVL,CAUWC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACG,KAAR,CAAc,4BAA4BA,KAA1C;AACH,KAZL;AAaH,GAdQ,EAcP,EAdO,CAAT;AAgBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKX,OAAO,CAACY,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBACb,QAAC,OAAD;AACS,QAAA,IAAI,EAAED;AADf,SAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,cADC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAWH,CA9BD;;GAAMf,c;;KAAAA,c;AAgCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Listing from './Listing';\n\nlet headers = new Headers();\n\nheaders.append('Content-Type', 'application/json');\nheaders.append('Origin','http://localhost:3000');\n\nconst filterNeighborhood = (listings, neighborhood) => {\n    return data.filter(data['Neighborhood'])\n} \n\nconst AirbnbListings = () => {\n    const [listing, setListing] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:3000/listings',{\n            mode: 'cors',\n            method: 'GET',\n            headers: headers\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setListing(data);\n            })\n            .catch(error => {\n                console.error('Error fetching listings' + error);\n            })\n    },[]);\n\n    return (\n        <>\n            <h1>SafeTravel</h1>\n            <h4>{listing.map((list, index) => \n                <Listing key={index}\n                         info={list} />\n            )}\n            </h4>\n        </>\n    )\n\n}\n\nexport default AirbnbListings;"]},"metadata":{},"sourceType":"module"}