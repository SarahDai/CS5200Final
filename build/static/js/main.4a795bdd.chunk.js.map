{"version":3,"sources":["components/Header.js","components/Listing.js","components/Listings.js","components/Search.js","views/App.js","serviceWorker.js","index.js"],"names":["Header","Row","className","Col","md","size","offset","icon","faAirbnb","Listing","props","crimeNum","name","str","array","toLowerCase","split","c","length","charAt","toUpperCase","substring","join","titleCase","info","replaceAll","location","Card","CardImg","top","src","alt","CardBody","CardSubtitle","tag","CardTitle","align","CardText","faStar","Badge","color","href","Button","outline","Listings","CardColumns","listings","map","listing","index","searchingBegun","roomTypeOptions","value","label","neighborhoodOptions","showListing","neighborhood","i","selectedOptions","headers","Headers","append","Search","useState","roomType","setRoomType","setNeighborhood","data","setData","result","setResult","useEffect","fetch","mode","method","then","response","json","catch","error","console","onSearchClick","log","type","searchedResults","Object","keys","filter","push","getSearchedListings","onSortPriceClick","sorted","sort","a","b","first","second","parseFloat","sortOnPrice","xs","faHome","faFilter","options","placeholder","onChange","isMulti","active","disabled","onClick","faSearch","faSortNumericDown","Alert","App","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a795bdd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAirbnb } from \"@fortawesome/free-brands-svg-icons\"; \n\nconst Header = () => \n    <Row className=\"homepage-header text-center\">\n        <Col md={{size: 10, offset: 1}}>\n            <h1><FontAwesomeIcon className=\"fa-airbnb\" icon={faAirbnb} />\n                <span className=\"left-padding\">SafeTravel</span></h1>\n            <hr />\n        </Col>\n    </Row>\n\nexport default Header;","import React from 'react';\nimport { Card, CardBody, Row, Col, CardImg, CardTitle,\n    CardSubtitle, CardText, Button, Badge } from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\n\nconst titleCase = str => {\n    str = str.toLowerCase();\n    var array = str.split(' ');\n    for(var c = 0; c < array.length; c++){\n        array[c] = array[c].charAt(0).toUpperCase() + array[c].substring(1);\n    }\n    return array.join(' ');\n}\n\nconst safetyIdx = crimeNum => {\n    if (crimeNum <= 10) {\n        return <Badge color=\"success\" className=\"safe-bg\">Safe <Badge color=\"secondary\">{crimeNum}</Badge></Badge>;\n    } else if (crimeNum <= 40) {\n        return <Badge color=\"warning\" className=\"safe-bg\">Warning <Badge color=\"secondary\">{crimeNum}</Badge></Badge>;\n    } else {\n        return <Badge color=\"danger\" className=\"safe-bg\">Danger <Badge color=\"secondary\">{crimeNum}</Badge></Badge>;\n    }\n}\n\nconst Listing = props => {\n    const name = titleCase(props.info['Name'].replaceAll('-COMMA-', ','))\n    const location = props.info['RoomType'] + ' in ' + props.info['Neighborhood']\n\n    return (\n        <>\n            <Row>\n                <Col md={{size: 10, offset: 1}}>\n                    <Card className=\"bottom-margin\">\n                        <Row>\n                            <Col>\n                                <CardImg className=\"card-img\" top src={props.info['PictureURL']} alt=\"airbnb listing picture\" />\n                            </Col>\n                        </Row>\n                        <CardBody>\n                            <CardSubtitle tag='h6'>{location}</CardSubtitle>\n                            <CardTitle tag='h5'>{name}</CardTitle>\n                            <Row>\n                                <Col align=\"left\">\n                                    <CardText className=\"card-text\">\n                                        <FontAwesomeIcon className=\"fab\" icon={faStar} />{' '}\n                                        {props.info['ReviewRating']}\n                                    </CardText>\n                                </Col>\n                                <Col align=\"right\">\n                                    <CardText className=\"card-text\">{props.info['Price']}</CardText>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col align=\"left\">\n                                    {\n                                        safetyIdx(props.info['LastWeekCrimeNum'])\n                                    }\n                                </Col>\n                                <Col align=\"right\" className=\"top-padding url-btn\">\n                                    <a href={props.info['ListingURL']} alt=\"Airbnb Listing URL\">\n                                        <Button outline color=\"info\" className=\"utl-btn\">Book</Button>\n                                    </a>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n\n}\n\nexport default Listing;","import React from \"react\";\nimport { CardColumns, Row, Col } from \"reactstrap\";\nimport Listing from \"./Listing\";\n\nconst Listings = props => {\n\n  return (\n      <>\n        <Row>\n          <Col md={{size: 10, offset: 1}}>\n            <CardColumns>\n            {\n              props.listings.map((listing, index) => \n              <Listing key={index}\n                      info={listing} />)\n            }\n            </CardColumns>\n          </Col>\n        </Row>\n      </>\n  )\n}\n\nexport default Listings;","import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilter, faHome, faSearch, faSortNumericDown } from '@fortawesome/free-solid-svg-icons';\nimport { Row, Col, Button, Alert } from \"reactstrap\";\nimport Listings from \"./Listings\";\n\nlet searchingBegun = false;\n\nconst sortOnPrice = listings => {\n    let sorted = [...listings]\n    sorted.sort((a,b) => {\n      let first = a['Price'].substring(1)\n      let second = b['Price'].substring(1)\n      return parseFloat(first) - parseFloat(second)\n    })\n    return sorted;\n  }\n\nconst roomTypeOptions = [\n    { value: 'Any', label: 'Any type'},\n    { value: 'Entire home/apt', label: 'Entire home/apt' },\n    { value: 'Private room', label: 'Private room' },\n    { value: 'Shared room', label: 'Shared room'},\n    { value: 'Hotel room', label: 'Hotel room'}\n]\n\nconst neighborhoodOptions = [\n    { value: 'Broadway', label: 'Broadway' },\n    { value: 'Belltown', label: 'Belltown' },\n    { value: 'Wallingford', label: 'Wallingford'},\n    { value: 'Central Business District', label: 'Central Business District' },\n    { value: 'University District', label: 'University District'},\n    { value: 'Minor', label: 'Minor'},\n    { value: 'Fremont', label: 'Fremont'},\n    { value: 'Pike-Market', label: 'Pike-Market'}\n]\n\nconst showListing = (neighborhood, listing) => {\n    for (let i = 0; i < neighborhood.selectedOptions.length; i++) {\n        if (listing['Neighborhood'] === neighborhood.selectedOptions[i].value) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst getSearchedListings = (listings, type, neighborhood) => {\n    let searchedResults = [...listings];\n    console.log(\"get search\", neighborhood);\n    if (Object.keys(type).length > 0 && type.selectedOptions.value !== 'Any') {\n        searchedResults = searchedResults.filter(listing => listing['RoomType'] === type.selectedOptions.value)\n    };\n    if (Object.keys(neighborhood).length > 0 && neighborhood.selectedOptions !== null) {\n        let result = [];\n        for (let i = 0; i < searchedResults.length; i++) {\n            if (showListing(neighborhood, searchedResults[i])) {\n                result.push(searchedResults[i]);\n            }\n        }\n        searchedResults = result;\n    };\n    return searchedResults;\n}\n\nlet headers = new Headers();\n\nheaders.append('Content-Type', 'application/json');\nheaders.append('Origin','http://localhost:4002');\n\nconst Search = () => {\n    const [roomType, setRoomType] = useState([]);\n    const [neighborhood, setNeighborhood] = useState([]);\n    const [data, setData] = useState([]);\n    const [result, setResult] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:4002/listings',{\n            mode: 'cors',\n            method: 'GET',\n            headers: headers\n        })\n            .then(response => response.json())\n            .then(data => {\n                setData(data);\n            })\n            .catch(error => {\n                console.error('Error fetching listings' + error);\n            })\n    },[]);\n\n    const onSearchClick = () => {\n        searchingBegun = false;\n        console.log(roomType);\n        console.log(neighborhood);\n        setResult(getSearchedListings(data, roomType, neighborhood));\n    }\n\n    const onTypeOptionChange = selectedOptions => {\n        console.log(selectedOptions);\n        searchingBegun = true;\n        setResult([]);\n        setRoomType({ selectedOptions });\n    }\n\n    const onNeighborhoodOptionChange = selectedOptions => {\n        searchingBegun = true;\n        setResult([]);\n        setNeighborhood({ selectedOptions });\n    }\n\n    const onSortPriceClick = () => {\n        setResult(sortOnPrice(result))\n    }\n    return (\n        <>\n            <Row>\n                <Col xs={{size: 10, offset: 1}}>\n                    <p><FontAwesomeIcon icon={faHome} />\n                    <span className=\"left-padding\">Places to stay in Seattle. </span></p>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={{size: 10, offset: 1}}>\n                    <p><FontAwesomeIcon icon={faFilter} />\n                    <span className=\"left-padding\">Select at least one option to begin:  </span></p>\n                </Col>\n            </Row>\n            <Row className=\"bottom-margin\">\n                <Col md={{size:4, offset: 1}}>\n                    <Select options={roomTypeOptions}\n                            placeholder=\"Room Type...\"\n                            onChange={onTypeOptionChange}\n                            />\n                </Col>\n                <Col md={{size:4}} align=\"center\">\n                    <Select options={neighborhoodOptions}\n                            placeholder=\"Neighborhood...\"\n                            isMulti\n                            onChange={onNeighborhoodOptionChange}\n                            />\n                </Col>\n                <Col md=\"2\" align=\"left\">\n                    <Button color=\"secondary\"\n                            active={roomType.length > 0 || neighborhood.length > 0}\n                            disabled={roomType.length === 0 && neighborhood.length === 0}\n                            onClick={() => {\n                                onSearchClick();\n                                }}><FontAwesomeIcon icon={faSearch} />{' '}\n                        Search\n                    </Button>{\"  \"}\n                    <Button color=\"info\" onClick={() => onSortPriceClick()}>\n                        ${\" \"}<FontAwesomeIcon icon={faSortNumericDown} /></Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={{size: 10, offset: 1}}>\n                {\n                    !searchingBegun && (roomType.length > 0 || neighborhood.length > 0) && result.length === 0 &&\n                        <Alert color=\"danger\">The listings doesn't have satisfied result for your query.\n                        Modify your configuration and try again!</Alert>\n                }\n                </Col>\n            </Row>\n            {\n                result.length > 0 \n                && \n                <>\n                    <Row>\n                        <Col md={{size: 10, offset: 1}}>\n                            <hr />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{size:3, offset:1}} className=\"bottom-margin\">\n                            <h6>{result.length} stays in Seattle</h6>\n                        </Col>\n                    </Row>\n                    <Listings listings={result} />\n                </>\n            }\n        </>\n    )\n\n\n\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport Header from '../components/Header';\nimport Search from '../components/Search';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Search />\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.css';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}